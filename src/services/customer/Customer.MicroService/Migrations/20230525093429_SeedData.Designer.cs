// <auto-generated />
using System;
using Customer.MicroService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Customer.MicroService.Migrations
{
    [DbContext(typeof(CustomerContext))]
    [Migration("20230525093429_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Customer.MicroService.Entities.CustomerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "John",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Mary",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Peter",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "David",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Paul",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "James",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Mark",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Andrew",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Edward",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Luke",
                            LastName = "Smith"
                        });
                });

            modelBuilder.Entity("Customer.MicroService.Entities.OrderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("OrderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("OrderDate")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            OrderAmount = 100.00m,
                            OrderDate = new DateTime(2023, 5, 25, 10, 34, 29, 794, DateTimeKind.Local).AddTicks(9690)
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 1,
                            OrderAmount = 200.00m,
                            OrderDate = new DateTime(2023, 5, 25, 10, 34, 29, 794, DateTimeKind.Local).AddTicks(9749)
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 2,
                            OrderAmount = 300.00m,
                            OrderDate = new DateTime(2023, 5, 25, 10, 34, 29, 794, DateTimeKind.Local).AddTicks(9752)
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 2,
                            OrderAmount = 400.00m,
                            OrderDate = new DateTime(2023, 5, 25, 10, 34, 29, 794, DateTimeKind.Local).AddTicks(9754)
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 3,
                            OrderAmount = 500.00m,
                            OrderDate = new DateTime(2023, 5, 25, 10, 34, 29, 794, DateTimeKind.Local).AddTicks(9755)
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 3,
                            OrderAmount = 600.00m,
                            OrderDate = new DateTime(2023, 5, 25, 10, 34, 29, 794, DateTimeKind.Local).AddTicks(9757)
                        },
                        new
                        {
                            Id = 7,
                            CustomerId = 4,
                            OrderAmount = 700.00m,
                            OrderDate = new DateTime(2023, 5, 25, 10, 34, 29, 794, DateTimeKind.Local).AddTicks(9759)
                        },
                        new
                        {
                            Id = 8,
                            CustomerId = 5,
                            OrderAmount = 800.00m,
                            OrderDate = new DateTime(2023, 5, 25, 10, 34, 29, 794, DateTimeKind.Local).AddTicks(9760)
                        },
                        new
                        {
                            Id = 9,
                            CustomerId = 5,
                            OrderAmount = 900.00m,
                            OrderDate = new DateTime(2023, 5, 25, 10, 34, 29, 794, DateTimeKind.Local).AddTicks(9762)
                        },
                        new
                        {
                            Id = 10,
                            CustomerId = 9,
                            OrderAmount = 1000.00m,
                            OrderDate = new DateTime(2023, 5, 25, 10, 34, 29, 794, DateTimeKind.Local).AddTicks(9764)
                        });
                });

            modelBuilder.Entity("Customer.MicroService.Entities.OrderEntity", b =>
                {
                    b.HasOne("Customer.MicroService.Entities.CustomerEntity", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
