apiVersion : v1
kind : ConfigMap
metadata:
  name : order-api-config
data:
  host : order-db-cluster-ip-service
  dbName: order_db_prod
  dbPort: "3306"

---

apiVersion: v1
kind: Secret
metadata:
  name: order-api-secret
type: Opaque
data:
  DB_USERNAME: cm9vdA== # root
  DB_PASSWORD: cm9vdA==  # root

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-api-deployment
  labels:
    app-service: order-api
spec:
  selector:
    matchLabels:
      app-service: order-api
  replicas: 1
  template:
    metadata:
      labels:
        app-service: order-api
    spec:
      containers:
        - name: order-api-deployment-container
          image: thegeekspad/microshop-order-microservice
          ports:
              - name: http-port
                containerPort: 8080
          env:
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                name: order-api-config
                key: host
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                name: order-api-config
                key: dbName
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: order-api-secret
                key: DB_USERNAME
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: order-api-secret
                key: DB_PASSWORD
          - name: SPRING_PROFILES_ACTIVE
            value: prod
          - name: RABBITMQ_HOST
            valueFrom:
              configMapKeyRef:
                name: rabbitmq-config
                key: RABBITMQ_HOST
          - name: RABBITMQ_PORT
            valueFrom:
              configMapKeyRef:
                name: rabbitmq-config
                key: RABBITMQ_PORT

---

apiVersion: v1
kind: Service
metadata:
  name: order-api-node-port-service
spec:
  type: NodePort
  ports:
    - port: 80 # this is the port on the service object and mapped to the node port
      targetPort: 8080 # this is the port on the pod
      nodePort: 30002 # this is the port exposed on the node. Valid range is 30000-32767.
  selector: # this connects the service to the pods
    app-service: order-api

---

apiVersion: v1
kind: Service
metadata:
  name: order-api-load-balancer-service
spec:
  type: LoadBalancer
  ports:
  - name: lb-port
    protocol: TCP
    port: 80
    targetPort: 8080
  selector: # this connects the service to the pods
    app-service: order-api

---

apiVersion: v1
kind: Service
metadata:
  name: order-api-cluster-ip-service
spec:
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8080
  selector: # this connects the service to the pods
    app-service: order-api
