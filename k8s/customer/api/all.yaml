apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
data:
  RABBITMQ_HOST: rabbit-mq-cluster-ip-service
  RABBITMQ_PORT: "5672"
  RABBITMQ_MANAGEMENT_PORT: "15672"

---

apiVersion : v1
kind : ConfigMap
metadata:
  name : customer-api-config
data:
  host : customer-db-cluster-ip-service
  dbName: CustomerDBProd

---

apiVersion: v1
kind: Secret
metadata:
  name: customer-api-secret
type: Opaque
data:
  SA_PASSWORD: TSFjckBzaEBwSzhT
  
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-api-deployment
  labels:
    app-service: customer-api
spec:
  selector:
    matchLabels:
      app-service: customer-api
  replicas: 1
  template:
    metadata:
      labels:
        app-service: customer-api
    spec:
      containers:
        - name: customer-api-deployment-container
          image: thegeekspad/microshop-customer-microservice
          ports:
              - name: http-port
                containerPort: 80
          env:
              - name: ACCEPT_EULA
                value: "Y"
              - name: DB_SERVER
                valueFrom:
                  configMapKeyRef:
                    name: customer-api-config
                    key: host
              - name: DB_NAME
                valueFrom:
                  configMapKeyRef:
                    name: customer-api-config
                    key: dbName
              - name: SA_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: customer-api-secret
                    key: SA_PASSWORD
              - name: RABBITMQ_HOST
                valueFrom:
                  configMapKeyRef:
                    name: rabbitmq-config
                    key: RABBITMQ_HOST
              - name: RABBITMQ_PORT
                valueFrom:
                  configMapKeyRef:
                    name: rabbitmq-config
                    key: RABBITMQ_PORT
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /api/health
              port: 80
            initialDelaySeconds: 2
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /api/health
              port: 80
            initialDelaySeconds: 15
            timeoutSeconds: 2
            periodSeconds: 20
            failureThreshold: 1

---

apiVersion: v1
kind: Service
metadata:
  name: customer-api-cluster-ip-service
spec:
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  selector: # this connects the service to the pods
    app-service: customer-api

---

apiVersion: v1
kind: Service
metadata:
  name: customer-api-node-port-service
spec:
  type: NodePort
  ports:
    - port: 80 # this is the port on the service object and mapped to the node port
      targetPort: 80 # this is the port on the pod
      nodePort: 30001 # this is the port exposed on the node. Valid range is 30000-32767.
  selector: # this connects the service to the pods
    app-service: customer-api

---

apiVersion: v1
kind: Service
metadata:
  name: customer-api-load-balancer-service
spec:
  type: LoadBalancer
  ports:
  - name: lb-port
    protocol: TCP
    port: 80
    targetPort: 80
  selector: # this connects the service to the pods
    app-service: customer-api

